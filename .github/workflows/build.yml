# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.3
      
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
        
    #  - name: Install GitVersion
    #    uses: gittools/actions/gitversion/setup@v0.9.7
    #    with: 
    #      versionSpec: '5.x'
          
    #  - name: Determine Version
    #    id: gitversion
    #    uses: gittools/actions/gitversion/execute@v0.9.7
    #    with:
    #      additionalArguments: '/updateAssemblyInfo'
        
      - name: Restore NuGet Packages
        run: nuget restore TestLibrary/TestLibrary.sln
        
      - name: Build Solution
        run: msbuild TestLibrary/TestLibrary.sln /property:Configuration=Debug
        
      - name: Take CPZ
        run: |
          mkdir built
          mv .\TestLibrary\bin\Debug\TestLibrary.dll built
        
      - name: FTP Deploy
        uses: sebastianpopp/ftp-action@v2.0.0
        with:
          host: ${{ secrets.FTP_HOST }}:${{ secrets.FTP_PORT }}
          user: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          forceSsl: false
          localDir: 'built'
          remoteDir: '/Broadway/software/debug'
